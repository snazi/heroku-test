{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.831ecca200614e611389.hot-update.js","sources":["webpack:///./components/common/Header/Header.jsx"],"sourcesContent":["// import React, { Component } from 'react'\r\nimport Link from 'next/link';\r\nimport React, { useState } from 'react'\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem\r\n} from 'reactstrap'\r\n\r\nimport auth0 from '../../../services/auth0'\r\n\r\nimport './styles.scss'\r\n\r\n// in this example, I create my own functional compoenent in order to handle \r\n// 1. the styling of the link in order for it to vibe with bootstrap's theme and css\r\n// 2. Make a component that I can feed an URL and title\r\nconst BsNavLink = (props) => {\r\n    const { route, title } = props\r\n    return(\r\n        <Link href={route}>\r\n            <a className='nav-link port-navbar-link'>{title}</a>\r\n        </Link>\r\n    )\r\n}\r\n\r\n// this section, we call on auth0.js from the services/auth0.js to call login.\r\nconst Login = () => {\r\n  return(\r\n    <span onClick={auth0.login} className=\"nav-link port-navbar-link\">Login</span>\r\n  )\r\n}\r\n\r\nconst Logout = () => {\r\n  return(\r\n    <span onClick={auth0.logout} className=\"nav-link port-navbar-link\">Logout</span>\r\n  )\r\n}\r\n\r\nconst Header = (props) => {\r\n// these 2 const is a small function that uses the useState function given in react that assignes the const to take in false\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  // im taking is Authenticated from a prop i passed from either about, blog, index, portfolio\r\n  const { isAuthenticated, user, className } = props\r\n  return (\r\n    <div>\r\n      <Navbar className={`port-navbar port-nav-base absolute ${className}`} color=\"transparent\" expand=\"md\">\r\n        <NavbarBrand className=\"port-navbar-brand\" href=\"/\">Angelo Amadora</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"port-navbar-item\">\r\n                <BsNavLink route=\"/\" title=\"Home\"/>\r\n            </NavItem>\r\n            <NavItem className=\"port-navbar-item\">\r\n                <BsNavLink route=\"/about\" title=\"About\"/>\r\n            </NavItem>\r\n            <NavItem className=\"port-navbar-item\">\r\n                <BsNavLink route=\"/portfolios\" title=\"Portfolio\"/>\r\n            </NavItem>\r\n            <NavItem className=\"port-navbar-item\">\r\n                <BsNavLink route=\"/blogs\" title=\"Blog\"/>\r\n            </NavItem>\r\n            <NavItem className=\"port-navbar-item\">\r\n                <BsNavLink route=\"/cv\" title=\"CV\"/>\r\n            </NavItem>\r\n\r\n            \r\n            { !isAuthenticated &&\r\n              <NavItem className=\"port-navbar-item clickable\">\r\n                <Login/>\r\n              </NavItem>\r\n            }\r\n\r\n            { isAuthenticated &&\r\n              <NavItem className=\"port-navbar-item clickable\">\r\n                <Logout/>\r\n              </NavItem>\r\n            }\r\n\r\n            { isAuthenticated &&\r\n              <NavItem className=\"port-navbar-item clickable\">\r\n                <span className=\"nav-link port-navbar-link\"> {user.name} </span>\r\n              </NavItem>\r\n            }\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AASA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AAOA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AAMA;AAAA;AAMA;AAAA;AACA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}