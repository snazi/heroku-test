{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport BaseLayout from '../components/layouts/BaseLayout';\nimport { withRouter } from 'next/router';\nimport axios from 'axios';\nimport BasePage from '../components/common/BasePage/BasePage';\nexport var portfolio =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(portfolio, _Component);\n\n  function portfolio() {\n    _classCallCheck(this, portfolio);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(portfolio).apply(this, arguments));\n  }\n\n  _createClass(portfolio, [{\n    key: \"render\",\n    value: function render() {\n      var portfolio = this.props.portfolio;\n      console.log(portfolio);\n      return __jsx(\"div\", null, __jsx(BaseLayout, null, __jsx(BasePage, null, __jsx(\"p\", null, portfolio.title), __jsx(\"p\", null, portfolio.body), __jsx(\"p\", null, portfolio.id))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    // due to changes in latest Next.js code, old code does not account that querry gets lost.\n    // usiong getInitial props allows us to let this component know that we have a query.\n    // one of the differences between getInitialProps and the one below is that \n    value: function getInitialProps(_ref) {\n      var query, portfolioId, portfolio, response;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = _ref.query;\n              console.log(query);\n              portfolioId = query.id;\n              portfolio = {};\n              console.log('hah');\n              _context.prev = 5;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(axios.get('https://jsonplaceholder.typicode.com/posts/' + portfolioId));\n\n            case 8:\n              response = _context.sent;\n              portfolio = response.data;\n              console.log(portfolio);\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](5);\n              console.error(_context.t0);\n\n            case 16:\n              return _context.abrupt(\"return\", {\n                portfolio: portfolio\n              });\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[5, 13]]);\n    }\n  }]);\n\n  return portfolio;\n}(Component); // in the docs you will find that the page needs to be surrounded with the withRouter() however we can also do this syntax in order to export the whole component wrapped inside withRouter()\n\nexport default withRouter(portfolio);","map":null,"metadata":{},"sourceType":"module"}