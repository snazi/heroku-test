{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport Header from '../components/common/Header/Header';\nimport BaseLayout from '../components/layouts/BaseLayout';\nimport axios from 'axios'; // this link comes from routes.js\n\nimport { Link } from '../routes';\nimport BasePage from '../components/common/BasePage/BasePage'; // reacttrap imports for the card\n\nimport { Col, Row, Button } from 'reactstrap';\nimport PortfolioCard from '../components/portfolios/PortfolioCard';\nimport { getPortfolios, deletePortfolio } from '../actions';\nimport { Router } from '../routes';\nexport class Portfolios2 extends Component {\n  static async getInitialProps() {\n    let portfolios = [];\n\n    try {\n      portfolios = await getPortfolios();\n    } catch (err) {\n      console.log(err);\n    }\n\n    return {\n      portfolios\n    };\n  }\n\n  navigateToEdit(portfolioId, e) {\n    e.stopPropagation();\n    Router.pushRoute(`/portfolios/${portfolioId}/edit`);\n  }\n\n  displayDeleteWarning(portfolioId, e) {\n    e.stopPropagation();\n    const isConfirmed = confirm('Are you sure you want to delete?');\n\n    if (isConfirmed) {\n      this.deletePortfolio(portfolioId);\n    }\n  }\n\n  deletePortfolio(portfolioId) {\n    deletePortfolio(portfolioId).then(() => {\n      Router.pushRoute('/portfolios');\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  renderPortfolios(portfolios) {\n    const {\n      isAuthenticated,\n      isSiteOwner\n    } = this.props.auth;\n    return portfolios.map((portfolio, index) => {\n      return __jsx(Col, {\n        key: index,\n        md: \"4\"\n      }, __jsx(PortfolioCard, {\n        portfolio: portfolio\n      }, isAuthenticated && isSiteOwner && __jsx(React.Fragment, null, __jsx(Button, {\n        onClick: e => {\n          e.stopPropagation();\n          this.navigateToEdit(portfolio._id, e);\n        },\n        color: \"warning\"\n      }, \"Edit\"), ' ', __jsx(Button, {\n        onClick: e => {\n          e.stopPropagation();\n          this.displayDeleteWarning(portfolio._id, e);\n        },\n        color: \"danger\"\n      }, \"Delete\"))));\n    });\n  }\n\n  render() {\n    const {\n      portfolios\n    } = this.props;\n    const {\n      isAuthenticated,\n      isSiteOwner\n    } = this.props.auth;\n    return __jsx(\"div\", null, __jsx(BaseLayout, _extends({\n      cannonical: \"/portfolios\",\n      title: \"Angelo Amadora - Learn about my Career\"\n    }, this.props.auth), __jsx(BasePage, {\n      className: \"portfolio-page\",\n      title: \"Portfolios\"\n    }, isAuthenticated && isSiteOwner && __jsx(Button, {\n      onClick: () => Router.pushRoute('/portfolios/new'),\n      color: \"success\",\n      className: \"create-port-btn\"\n    }, \"Create Portfolio\"), __jsx(Row, null, this.renderPortfolios(portfolios)))));\n  }\n\n}\nexport default Portfolios2;","map":null,"metadata":{},"sourceType":"module"}