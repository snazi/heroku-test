{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { getCookieFromRequest } from '../helpers/utils';\n\nvar setAuthHeader = function setAuthHeader(req) {\n  var token = req ? getCookieFromRequest(req, 'jwt') : Cookies.getJSON('jwt');\n\n  if (token) {\n    return {\n      headers: {\n        'authorization': \"Bearer \".concat(token)\n      }\n    };\n  }\n\n  return undefined;\n};\n\nexport var getSecretData = function getSecretData(req) {\n  var url;\n  return _regeneratorRuntime.async(function getSecretData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = req ? 'http://localhost:3000/api/v1/secret' : '/api/v1/secret';\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(url, setAuthHeader(req)).then(function (response) {\n            return response.data;\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}; // export const getSecretDataServer = async (req) => {\n//     return await axios.get('http://localhost:3000/api/v1/secret', setAuthHeader(req) ).then( response => response.data )\n// }","map":null,"metadata":{},"sourceType":"module"}