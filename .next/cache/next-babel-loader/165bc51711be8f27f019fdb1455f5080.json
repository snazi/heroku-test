{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Header from '../components/common/Header/Header';\nimport BaseLayout from '../components/layouts/BaseLayout';\nimport axios from 'axios'; // this link comes from routes.js\n\nimport { Link } from '../routes';\nimport BasePage from '../components/common/BasePage/BasePage'; // reacttrap imports for the card\n\nimport { Col, Row, Button } from 'reactstrap';\nimport PortfolioCard from '../components/portfolios/PortfolioCard';\nimport { getPortfolios, deletePortfolio as _deletePortfolio } from '../actions';\nimport { Router } from '../routes';\nexport var Portfolios =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Portfolios, _Component);\n\n  function Portfolios() {\n    _classCallCheck(this, Portfolios);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Portfolios).apply(this, arguments));\n  }\n\n  _createClass(Portfolios, [{\n    key: \"navigateToEdit\",\n    value: function navigateToEdit(portfolioId, e) {\n      e.stopPropagation();\n      Router.pushRoute(\"/portfolios/\".concat(portfolioId, \"/edit\"));\n    }\n  }, {\n    key: \"displayDeleteWarning\",\n    value: function displayDeleteWarning(portfolioId, e) {\n      e.stopPropagation();\n      var isConfirmed = confirm('Are you sure you want to delete?');\n\n      if (isConfirmed) {\n        this.deletePortfolio(portfolioId);\n      }\n    }\n  }, {\n    key: \"deletePortfolio\",\n    value: function deletePortfolio(portfolioId) {\n      _deletePortfolio(portfolioId).then(function () {\n        Router.pushRoute('/portfolios');\n      })[\"catch\"](function (err) {\n        console.error(err);\n      });\n    }\n  }, {\n    key: \"renderPortfolios\",\n    value: function renderPortfolios(portfolios) {\n      var _this = this;\n\n      var _this$props$auth = this.props.auth,\n          isAuthenticated = _this$props$auth.isAuthenticated,\n          isSiteOwner = _this$props$auth.isSiteOwner;\n      return portfolios.map(function (portfolio, index) {\n        return __jsx(Col, {\n          key: index,\n          md: \"4\"\n        }, __jsx(PortfolioCard, {\n          portfolio: portfolio\n        }, isAuthenticated && isSiteOwner && __jsx(React.Fragment, null, __jsx(Button, {\n          onClick: function onClick(e) {\n            e.stopPropagation();\n\n            _this.navigateToEdit(portfolio._id, e);\n          },\n          color: \"warning\"\n        }, \"Edit\"), ' ', __jsx(Button, {\n          onClick: function onClick(e) {\n            e.stopPropagation();\n\n            _this.displayDeleteWarning(portfolio._id, e);\n          },\n          color: \"danger\"\n        }, \"Delete\"))));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var portfolios = this.props.portfolios;\n      var _this$props$auth2 = this.props.auth,\n          isAuthenticated = _this$props$auth2.isAuthenticated,\n          isSiteOwner = _this$props$auth2.isSiteOwner;\n      return __jsx(\"div\", null, __jsx(BaseLayout, _extends({\n        title: \"Angelo Amadora - Learn about my Career\"\n      }, this.props.auth), __jsx(BasePage, {\n        className: \"portfolio-page\",\n        title: \"Portfolios\"\n      }, isAuthenticated && isSiteOwner && __jsx(Button, {\n        onClick: function onClick() {\n          return Router.pushRoute('/portfolios/new');\n        },\n        color: \"success\",\n        className: \"create-port-btn\"\n      }, \"Create Portfolio\"), __jsx(Row, null, this.renderPortfolios(portfolios)))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var portfolios;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              portfolios = [];\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(getPortfolios());\n\n            case 4:\n              portfolios = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 10:\n              return _context.abrupt(\"return\", {\n                portfolios: portfolios\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 7]]);\n    }\n  }]);\n\n  return Portfolios;\n}(Component);\nexport default Portfolios;","map":{"version":3,"sources":["E:/Documents/Code Projects/Portfolio/heroku-test/pages/portfolios.js"],"names":["React","Component","Header","BaseLayout","axios","Link","BasePage","Col","Row","Button","PortfolioCard","getPortfolios","deletePortfolio","Router","Portfolios","portfolioId","e","stopPropagation","pushRoute","isConfirmed","confirm","then","err","console","error","portfolios","props","auth","isAuthenticated","isSiteOwner","map","portfolio","index","navigateToEdit","_id","displayDeleteWarning","renderPortfolios","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Header from '../components/common/Header/Header'\r\nimport BaseLayout from '../components/layouts/BaseLayout'\r\nimport axios from 'axios' \r\n// this link comes from routes.js\r\nimport {Link} from '../routes'\r\nimport BasePage from '../components/common/BasePage/BasePage'\r\n// reacttrap imports for the card\r\nimport { Col, Row, Button} from 'reactstrap'\r\nimport PortfolioCard from '../components/portfolios/PortfolioCard'\r\nimport {getPortfolios, deletePortfolio} from '../actions'\r\n\r\nimport {Router} from '../routes'\r\n\r\nexport class Portfolios extends Component {\r\n\r\n    static async getInitialProps() {\r\n        let portfolios = []\r\n\r\n        try{\r\n            portfolios = await getPortfolios()\r\n        }catch(err) {\r\n            console.log(err)\r\n        }\r\n\r\n        return {portfolios}\r\n    }\r\n\r\n    navigateToEdit(portfolioId, e) {\r\n        e.stopPropagation()\r\n        Router.pushRoute(`/portfolios/${portfolioId}/edit`)\r\n    }\r\n\r\n    displayDeleteWarning(portfolioId, e) {\r\n        e.stopPropagation()\r\n\r\n        const isConfirmed = confirm('Are you sure you want to delete?')\r\n\r\n        if(isConfirmed) {\r\n            this.deletePortfolio(portfolioId)\r\n        }\r\n    }\r\n\r\n    deletePortfolio(portfolioId) {\r\n        deletePortfolio(portfolioId)\r\n            .then( () => {\r\n                Router.pushRoute('/portfolios')\r\n            })\r\n            .catch( err => {\r\n                console.error(err)\r\n            })\r\n    }\r\n\r\n    renderPortfolios(portfolios) {\r\n       const { isAuthenticated, isSiteOwner } = this.props.auth\r\n\r\n        return portfolios.map( (portfolio,index) => {\r\n            return (\r\n                <Col key={index} md=\"4\">\r\n                    <PortfolioCard portfolio={portfolio}>\r\n                    {isAuthenticated && isSiteOwner &&\r\n                                <React.Fragment>\r\n                                    <Button onClick={(e) => {\r\n                                            e.stopPropagation()\r\n                                            this.navigateToEdit(portfolio._id, e)}\r\n                                        } \r\n                                        color=\"warning\">\r\n                                        Edit\r\n                                    </Button>{' '}\r\n                                    <Button onClick={ (e) => {\r\n                                            e.stopPropagation()\r\n                                            this.displayDeleteWarning(portfolio._id, e)\r\n                                        }} \r\n                                        color=\"danger\">\r\n                                        Delete\r\n                                    </Button>\r\n                                </React.Fragment>\r\n                            }\r\n                    </PortfolioCard>\r\n                </Col>\r\n\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        const {portfolios} = this.props\r\n        const { isAuthenticated, isSiteOwner } = this.props.auth\r\n        return (\r\n            <div> \r\n                <BaseLayout title=\"Angelo Amadora - Learn about my Career\" {...this.props.auth}>\r\n                    <BasePage className=\"portfolio-page\" title=\"Portfolios\">\r\n                        {isAuthenticated && isSiteOwner &&\r\n                            <Button onClick={()=> Router.pushRoute('/portfolios/new')} \r\n                                color=\"success\" \r\n                                className=\"create-port-btn\">\r\n                                    Create Portfolio\r\n                            </Button>\r\n                        }\r\n                        <Row>\r\n                        {this.renderPortfolios(portfolios)}\r\n                        </Row>\r\n                    </BasePage>\r\n                </BaseLayout>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Portfolios\r\n"]},"metadata":{},"sourceType":"module"}