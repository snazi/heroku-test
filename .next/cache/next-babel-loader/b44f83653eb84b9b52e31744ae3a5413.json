{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport BaseLayout from '../components/layouts/BaseLayout';\nimport { withRouter } from 'next/router';\nimport axios from 'axios';\nexport class portfolio extends Component {\n  // due to changes in latest Next.js code, old code does not account that querry gets lost.\n  // usiong getInitial props allows us to let this component know that we have a query.\n  // one of the differences between getInitialProps and the one below is that \n  static async getInitialProps({\n    query\n  }) {\n    console.log(query);\n    const portfolioId = query.id;\n    let portfolio = {};\n    console.log('hah');\n\n    try {\n      const response = await axios.get('https://jsonplaceholder.typicode.com/posts/' + portfolioId);\n      portfolio = response.data;\n      console.log(portfolio);\n    } catch (error) {\n      console.error(error);\n    }\n\n    return {\n      portfolio\n    };\n  }\n\n  render() {\n    const {\n      portfolio\n    } = this.props;\n    console.log(portfolio);\n    return __jsx(\"div\", null, __jsx(BaseLayout, null, __jsx(\"p\", null, portfolio.title), __jsx(\"p\", null, portfolio.id)));\n  }\n\n} // in the docs you will find that the page needs to be surrounded with the withRouter() however we can also do this syntax in order to export the whole component wrapped inside withRouter()\n\nexport default withRouter(portfolio);","map":{"version":3,"sources":["E:/Documents/Projects/portfolio/pages/portfolio.js"],"names":["React","Component","BaseLayout","withRouter","axios","portfolio","getInitialProps","query","console","log","portfolioId","id","response","get","data","error","render","props","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AACrC;AACA;AAEA;AACA,eAAaK,eAAb,CAA6B;AAACC,IAAAA;AAAD,GAA7B,EAAsC;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAMG,WAAW,GAAGH,KAAK,CAACI,EAA1B;AACA,QAAIN,SAAS,GAAG,EAAhB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,QAAG;AAEC,YAAMG,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,gDAAgDH,WAA1D,CAAvB;AACAL,MAAAA,SAAS,GAAGO,QAAQ,CAACE,IAArB;AAEAN,MAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACH,KAND,CAMC,OAAMU,KAAN,EAAa;AACVP,MAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACH;;AAGD,WAAO;AAACV,MAAAA;AAAD,KAAP;AACH;;AAEDW,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEX,MAAAA;AAAF,QAAgB,KAAKY,KAA3B;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAEA,WACI,mBACI,MAAC,UAAD,QACI,iBAAIA,SAAS,CAACa,KAAd,CADJ,EAEI,iBAAIb,SAAS,CAACM,EAAd,CAFJ,CADJ,CADJ;AAQH;;AArCoC,C,CAwCzC;;AACA,eAAeR,UAAU,CAACE,SAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\r\nimport BaseLayout from '../components/layouts/BaseLayout'\r\nimport {withRouter} from 'next/router'\r\nimport axios from 'axios'\r\n\r\nexport class portfolio extends Component {\r\n    // due to changes in latest Next.js code, old code does not account that querry gets lost.\r\n    // usiong getInitial props allows us to let this component know that we have a query.\r\n  \r\n    // one of the differences between getInitialProps and the one below is that \r\n    static async getInitialProps({query}) {\r\n        console.log(query)\r\n        const portfolioId = query.id\r\n        let portfolio = {}\r\n        console.log('hah')\r\n        try{\r\n\r\n            const response = await axios.get('https://jsonplaceholder.typicode.com/posts/' + portfolioId)\r\n            portfolio = response.data\r\n           \r\n            console.log(portfolio)\r\n        }catch(error) {\r\n            console.error(error)\r\n        }\r\n\r\n\r\n        return {portfolio}\r\n    }\r\n\r\n    render() {\r\n       \r\n        const { portfolio } = this.props\r\n        console.log(portfolio)\r\n        \r\n        return (\r\n            <div>\r\n                <BaseLayout>\r\n                    <p>{portfolio.title}</p>\r\n                    <p>{portfolio.id}</p>\r\n                </BaseLayout>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// in the docs you will find that the page needs to be surrounded with the withRouter() however we can also do this syntax in order to export the whole component wrapped inside withRouter()\r\nexport default withRouter(portfolio)\r\n"]},"metadata":{},"sourceType":"module"}