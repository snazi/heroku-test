{"ast":null,"code":"var __jsx = React.createElement;\n// import React, { Component } from 'react'\nimport Link from 'next/link';\nimport React, { useState } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, Dropdown, DropdownItem, DropdownToggle, DropdownMenu } from 'reactstrap';\nimport auth0 from '../../../services/auth0';\nimport ActiveLink from '../../ActiveLink';\nimport './styles.scss'; // in this example, I create my own functional compoenent in order to handle \n// 1. the styling of the link in order for it to vibe with bootstrap's theme and css\n// 2. Make a component that I can feed an URL and title\n\nconst BsNavLink = props => {\n  const {\n    route,\n    title\n  } = props;\n  const className = props.className || \"\";\n  return __jsx(ActiveLink, {\n    activeClassName: \"active\",\n    route: route\n  }, __jsx(\"a\", {\n    className: `nav-link port-navbar-link ${className}`\n  }, title));\n}; // this section, we call on auth0.js from the services/auth0.js to call login.\n\n\nconst Login = () => {\n  return __jsx(\"span\", {\n    onClick: auth0.login,\n    className: \"nav-link port-navbar-link\"\n  }, \"Login\");\n};\n\nconst Logout = () => {\n  return __jsx(\"span\", {\n    onClick: auth0.logout,\n    className: \"nav-link port-navbar-link\"\n  }, \"Logout\");\n};\n\nconst Header = props => {\n  // these 2 const is a small function that uses the useState function given in react that assignes the const to take in false\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: dropdownOpen,\n    1: setDropdownOpen\n  } = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const renderBlogMenu = props => {\n    const {\n      isSiteOwner\n    } = props;\n\n    if (isSiteOwner) {\n      return __jsx(Dropdown, {\n        className: \"port-navbar-link port-dropdown-menu\",\n        nav: true,\n        isOpen: dropdownOpen,\n        toggle: toggleDropdown\n      }, __jsx(DropdownToggle, {\n        className: \"port-dropdown-toggle\",\n        nav: true,\n        caret: true\n      }, \"Blog\"), __jsx(DropdownMenu, null, __jsx(DropdownItem, null, __jsx(BsNavLink, {\n        className: \"port-dropdown-item\",\n        route: \"/blogs\",\n        title: \"Blogs\"\n      })), __jsx(DropdownItem, null, __jsx(BsNavLink, {\n        className: \"port-dropdown-item\",\n        route: \"/blogs/new\",\n        title: \"Create a Blog\"\n      })), __jsx(DropdownItem, null, __jsx(BsNavLink, {\n        className: \"port-dropdown-item\",\n        route: \"/blogs/dashboard\",\n        title: \"Blogs Dashboard\"\n      }))));\n    }\n\n    return __jsx(NavItem, {\n      className: \"port-navbar-item\"\n    }, __jsx(BsNavLink, {\n      route: \"/blogs\",\n      title: \"Blog\"\n    }));\n  }; // im taking is Authenticated from a prop i passed from either about, blog, index, portfolio\n\n\n  const {\n    isAuthenticated,\n    user,\n    className\n  } = props;\n  const menuOpenClass = isOpen ? 'menu-open' : 'menu-close';\n  return __jsx(\"div\", null, __jsx(Navbar, {\n    className: `port-navbar port-nav-base absolute ${className} ${menuOpenClass}`,\n    light: true,\n    expand: \"md\"\n  }, __jsx(NavbarBrand, {\n    className: \"port-navbar-brand\",\n    href: \"/\"\n  }, \"Angelo Amadora\"), __jsx(NavbarToggler, {\n    onClick: toggle,\n    className: `colorpls`\n  }), __jsx(Collapse, {\n    isOpen: isOpen,\n    navbar: true\n  }, __jsx(Nav, {\n    className: \"ml-auto\",\n    navbar: true\n  }, __jsx(NavItem, {\n    className: \"port-navbar-item\"\n  }, __jsx(BsNavLink, {\n    route: \"/\",\n    title: \"Home\"\n  })), __jsx(NavItem, {\n    className: \"port-navbar-item\"\n  }, __jsx(BsNavLink, {\n    route: \"/about\",\n    title: \"About\"\n  })), __jsx(NavItem, {\n    className: \"port-navbar-item\"\n  }, __jsx(BsNavLink, {\n    route: \"/portfolios\",\n    title: \"Portfolio\"\n  })), renderBlogMenu(props), __jsx(NavItem, {\n    className: \"port-navbar-item\"\n  }, __jsx(BsNavLink, {\n    route: \"/cv\",\n    title: \"CV\"\n  })), !isAuthenticated && __jsx(NavItem, {\n    className: \"port-navbar-item clickable\"\n  }, __jsx(Login, null)), isAuthenticated && __jsx(NavItem, {\n    className: \"port-navbar-item clickable\"\n  }, __jsx(Logout, null)), isAuthenticated && __jsx(NavItem, {\n    className: \"port-navbar-item clickable\"\n  }, __jsx(\"span\", {\n    className: \"nav-link port-navbar-link\"\n  }, \" \", user.name, \" \"))))));\n};\n\nexport default Header;","map":{"version":3,"sources":["E:/Documents/Code Projects/Portfolio/heroku-test/components/common/Header/Header.jsx"],"names":["Link","React","useState","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","Dropdown","DropdownItem","DropdownToggle","DropdownMenu","auth0","ActiveLink","BsNavLink","props","route","title","className","Login","login","Logout","logout","Header","isOpen","setIsOpen","dropdownOpen","setDropdownOpen","toggle","toggleDropdown","renderBlogMenu","isSiteOwner","isAuthenticated","user","menuOpenClass","name"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react'\r\nimport Link from 'next/link';\r\nimport React, { useState } from 'react'\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu\r\n} from 'reactstrap'\r\n\r\nimport auth0 from '../../../services/auth0'\r\nimport ActiveLink from '../../ActiveLink'\r\n\r\nimport './styles.scss'\r\n\r\n\r\n// in this example, I create my own functional compoenent in order to handle \r\n// 1. the styling of the link in order for it to vibe with bootstrap's theme and css\r\n// 2. Make a component that I can feed an URL and title\r\nconst BsNavLink = (props) => {\r\n    const { route, title } = props\r\n    const className = props.className || \"\"\r\n    \r\n    return(\r\n        <ActiveLink activeClassName=\"active\" route={route}>\r\n          <a className={`nav-link port-navbar-link ${className}`}>{title}</a>\r\n        </ActiveLink>\r\n    )\r\n}\r\n\r\n// this section, we call on auth0.js from the services/auth0.js to call login.\r\nconst Login = () => {\r\n  return(\r\n    <span onClick={auth0.login} className=\"nav-link port-navbar-link\">Login</span>\r\n  )\r\n}\r\n\r\nconst Logout = () => {\r\n  return(\r\n    <span onClick={auth0.logout} className=\"nav-link port-navbar-link\">Logout</span>\r\n  )\r\n}\r\n\r\nconst Header = (props) => {\r\n// these 2 const is a small function that uses the useState function given in react that assignes the const to take in false\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [dropdownOpen, setDropdownOpen] = useState(false)\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen)\r\n  const renderBlogMenu = (props) => {\r\n    const { isSiteOwner } = props\r\n\r\n    if(isSiteOwner) {\r\n      return (\r\n        <Dropdown  className=\"port-navbar-link port-dropdown-menu\" nav isOpen={dropdownOpen} toggle={toggleDropdown}>\r\n          <DropdownToggle className=\"port-dropdown-toggle\" nav caret>\r\n           Blog\r\n            </DropdownToggle>\r\n          <DropdownMenu>\r\n            \r\n            <DropdownItem> \r\n              <BsNavLink className=\"port-dropdown-item\" route=\"/blogs\" title=\"Blogs\"/>\r\n            </DropdownItem>\r\n            <DropdownItem>\r\n              <BsNavLink className=\"port-dropdown-item\" route=\"/blogs/new\" title=\"Create a Blog\"/>\r\n            </DropdownItem>\r\n            <DropdownItem>\r\n              <BsNavLink className=\"port-dropdown-item\" route=\"/blogs/dashboard\" title=\"Blogs Dashboard\"/>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <NavItem className=\"port-navbar-item\">\r\n        <BsNavLink route=\"/blogs\" title=\"Blog\"/>\r\n      </NavItem>\r\n      \r\n    )\r\n  }\r\n\r\n  // im taking is Authenticated from a prop i passed from either about, blog, index, portfolio\r\n  const { isAuthenticated, user, className } = props\r\n  const menuOpenClass = isOpen ? 'menu-open' : 'menu-close'\r\n  \r\n  return (\r\n    <div>\r\n      <Navbar className={`port-navbar port-nav-base absolute ${className} ${menuOpenClass}`} light expand=\"md\">\r\n        <NavbarBrand className=\"port-navbar-brand\" href=\"/\">Angelo Amadora</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} className={`colorpls`}/>\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"port-navbar-item\">\r\n                <BsNavLink route=\"/\" title=\"Home\"/>\r\n            </NavItem>\r\n            <NavItem className=\"port-navbar-item\">\r\n                <BsNavLink route=\"/about\" title=\"About\"/>\r\n            </NavItem>\r\n            <NavItem className=\"port-navbar-item\">\r\n                <BsNavLink route=\"/portfolios\" title=\"Portfolio\"/>\r\n            </NavItem>\r\n            \r\n                \r\n                {\r\n                  renderBlogMenu(props)\r\n                }\r\n   \r\n            <NavItem className=\"port-navbar-item\">\r\n                <BsNavLink route=\"/cv\" title=\"CV\"/>\r\n            </NavItem>\r\n\r\n            \r\n            { !isAuthenticated &&\r\n              <NavItem className=\"port-navbar-item clickable\">\r\n                <Login/>\r\n              </NavItem>\r\n            }\r\n\r\n            { isAuthenticated &&\r\n              <NavItem className=\"port-navbar-item clickable\">\r\n                <Logout/>\r\n              </NavItem>\r\n            }\r\n\r\n            { isAuthenticated &&\r\n              <NavItem className=\"port-navbar-item clickable\">\r\n                <span className=\"nav-link port-navbar-link\"> {user.name} </span>\r\n              </NavItem>\r\n            }\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}