{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment';\nimport \"react-datepicker/dist/react-datepicker.css\"; // CSS Modules, react-datepicker-cssmodules.css\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nimport { FormGroup, Label, Button, Form } from 'reactstrap';\n\nvar PortDate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PortDate, _React$Component);\n\n  function PortDate(props) {\n    var _this;\n\n    _classCallCheck(this, PortDate);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PortDate).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (date) {\n      var _this$props$form = _this.props.form,\n          setFieldValue = _this$props$form.setFieldValue,\n          setFieldTouched = _this$props$form.setFieldTouched;\n      var name = _this.props.field.name;\n\n      _this.setState({\n        dateValue: date\n      });\n\n      setFieldValue(name, date, true);\n      setFieldTouched(name, true, true);\n    });\n\n    var dateValue = props.initialDate ? new Date(props.initialDate) : new Date();\n    var isHidden = props.initialDate ? false : true;\n    _this.state = {\n      dateValue: dateValue,\n      isHidden: isHidden\n    };\n    return _this;\n  }\n\n  _createClass(PortDate, [{\n    key: \"toggleDate\",\n    value: function toggleDate(date) {\n      var _this$props$form2 = this.props.form,\n          setFieldValue = _this$props$form2.setFieldValue,\n          setFieldTouched = _this$props$form2.setFieldTouched;\n      var name = this.props.field.name;\n      this.setState({\n        isHidden: !this.state.isHidden\n      });\n      setFieldValue(name, date, true);\n      setFieldTouched(name, true, true);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          isHidden = _this$state.isHidden,\n          dateValue = _this$state.dateValue;\n      var _this$props = this.props,\n          label = _this$props.label,\n          field = _this$props.field,\n          canBeDisabled = _this$props.canBeDisabled,\n          _this$props$form3 = _this$props.form,\n          touched = _this$props$form3.touched,\n          errors = _this$props$form3.errors;\n      return __jsx(FormGroup, null, __jsx(Label, null, label), __jsx(\"div\", {\n        className: \"input-group\"\n      }, !isHidden && __jsx(DatePicker, {\n        selected: dateValue,\n        onChange: this.handleChange,\n        peekNextMonth: true,\n        showMonthDropdown: true,\n        showYearDropdown: true,\n        maxDate: new Date(),\n        dropdownMode: \"select\"\n      })), canBeDisabled && !isHidden && __jsx(Button, {\n        onClick: function onClick() {\n          return _this2.toggleDate();\n        }\n      }, \"Still Working here\"), canBeDisabled && isHidden && __jsx(React.Fragment, null, __jsx(\"span\", null, \"Still Working Here...\"), __jsx(Button, {\n        onClick: function onClick() {\n          return _this2.toggleDate(dateValue);\n        }\n      }, \" Set End Date\")), touched[field.name] && errors[field.name] && __jsx(\"div\", {\n        className: \"error\"\n      }, errors[field.name]));\n    }\n  }]);\n\n  return PortDate;\n}(React.Component);\n\nexport default PortDate;","map":null,"metadata":{},"sourceType":"module"}