{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { getCookieFromRequest } from '../helpers/utils';\nvar axiosInstance = axios.create({\n  baseURL: 'http://localhost:3000/api/v1',\n  timeout: 3000\n});\n\nvar setAuthHeader = function setAuthHeader(req) {\n  var token = req ? getCookieFromRequest(req, 'jwt') : Cookies.getJSON('jwt');\n\n  if (token) {\n    return {\n      headers: {\n        'authorization': \"Bearer \".concat(token)\n      }\n    };\n  }\n\n  return undefined;\n};\n\nvar rejectPromise = function rejectPromise(resError) {\n  var error = {};\n\n  if (resError && resError.response && resError.response.data) {\n    error = resError.response.data;\n  } else {\n    error = resError;\n  }\n\n  return _Promise.reject(error);\n};\n\nexport var getSecretData = function getSecretData(req) {\n  var url;\n  return _regeneratorRuntime.async(function getSecretData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = req ? '/secret' : '/api/v1/secret';\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axiosInstance.get(url, setAuthHeader(req)).then(function (response) {\n            return response.data;\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}; // export const getSecretDataServer = async (req) => {\n//     return await axios.get('http://localhost:3000/api/v1/secret', setAuthHeader(req) ).then( response => response.data )\n// }\n\nexport var getPortfolios = function getPortfolios() {\n  var url;\n  return _regeneratorRuntime.async(function getPortfolios$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          url = '/portfolios';\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axiosInstance.get(url).then(function (response) {\n            return response.data;\n          }));\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\nexport var createPortfolio = function createPortfolio(portfolioData) {\n  var url;\n  return _regeneratorRuntime.async(function createPortfolio$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          url = '/portfolios';\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(axiosInstance.post(url, portfolioData, setAuthHeader()).then(function (response) {\n            return response.data;\n          })[\"catch\"](function (error) {\n            return rejectPromise(error);\n          }));\n\n        case 3:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\nexport var getPortfolioById = function getPortfolioById(id) {\n  return _regeneratorRuntime.async(function getPortfolioById$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(axiosInstance.get(\"/portfolios/\".concat(id)).then(function (response) {\n            return response.data;\n          }));\n\n        case 2:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  });\n};\nexport var updatePortfolio = function updatePortfolio(portfolioData) {\n  var url;\n  return _regeneratorRuntime.async(function updatePortfolio$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          url = \"/portfolios/\".concat(portfolioData._id);\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(axiosInstance.patch(url, portfolioData, setAuthHeader()).then(function (response) {\n            return response.data;\n          })[\"catch\"](function (error) {\n            return rejectPromise(error);\n          }));\n\n        case 3:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 4:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  });\n};\nexport var deletePortfolio = function deletePortfolio(id) {\n  return axiosInstance[\"delete\"](\"/portfolios/\".concat(id), setAuthHeader()).then(function (response) {\n    return response.data;\n  });\n}; // BLOG ACTIONS\n\nexport var getBlogs = function getBlogs(req) {\n  return _regeneratorRuntime.async(function getBlogs$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(axiosInstance.get('/blogs').then(function (response) {\n            return response.data;\n          }));\n\n        case 2:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  });\n};\nexport var getBlogBySlug = function getBlogBySlug(slug) {\n  return _regeneratorRuntime.async(function getBlogBySlug$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return _regeneratorRuntime.awrap(axiosInstance.get(\"/blogs/s/\".concat(slug)).then(function (response) {\n            return response.data;\n          }));\n\n        case 2:\n          return _context7.abrupt(\"return\", _context7.sent);\n\n        case 3:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  });\n};\nexport var getUserBlogs = function getUserBlogs(req) {\n  return _regeneratorRuntime.async(function getUserBlogs$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return _regeneratorRuntime.awrap(axiosInstance.get('/blogs/me', setAuthHeader(req)).then(function (response) {\n            return response.data;\n          }));\n\n        case 2:\n          return _context8.abrupt(\"return\", _context8.sent);\n\n        case 3:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  });\n};\nexport var saveBlog = function saveBlog(blogData) {\n  return new _Promise(function (resolve, reject) {\n    setTimeout(function () {\n      resolve('Promise Resolved!');\n    }, 1000);\n  });\n};\nexport var createBlog = function createBlog(blogData, lockId) {\n  return axiosInstance.post(\"/blogs?lockId=\".concat(lockId), blogData, setAuthHeader()).then(function (response) {\n    return response.data;\n  })[\"catch\"](function (err) {\n    return rejectPromise(err);\n  });\n};\nexport var getBlogById = function getBlogById(id) {\n  return _regeneratorRuntime.async(function getBlogById$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return _regeneratorRuntime.awrap(axiosInstance.get(\"/blogs/\".concat(id)).then(function (response) {\n            return response.data;\n          }));\n\n        case 2:\n          return _context9.abrupt(\"return\", _context9.sent);\n\n        case 3:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  });\n};\nexport var updateBlog = function updateBlog(blogData, blogId) {\n  return _regeneratorRuntime.async(function updateBlog$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          return _context10.abrupt(\"return\", axiosInstance.patch(\"/blogs/\".concat(blogId), blogData, setAuthHeader()).then(function (response) {\n            return response.data;\n          })[\"catch\"](function (err) {\n            return rejectPromise(err);\n          }));\n\n        case 1:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  });\n};\nexport var deleteBlog = function deleteBlog(blogId) {\n  return axiosInstance[\"delete\"](\"/blogs/\".concat(blogId), setAuthHeader()).then(function (response) {\n    return response.data;\n  })[\"catch\"](function (err) {\n    return rejectPromise(err);\n  });\n};","map":null,"metadata":{},"sourceType":"module"}