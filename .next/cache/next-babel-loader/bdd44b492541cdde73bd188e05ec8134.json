{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Header from '../components/common/Header/Header';\nimport BaseLayout from '../components/layouts/BaseLayout';\nimport axios from 'axios'; // this link comes from routes.js\n\nimport { Link } from '../routes';\nexport class Portfolios extends Component {\n  static async getInitialProps() {\n    // this console log will only show up in the SERVER side not the client. The only way for this to show up on the client is when you access this component again.\n    console.log('get initial props');\n    let posts = {};\n\n    try {\n      const response = await axios.get('https://jsonplaceholder.typicode.com/posts');\n      posts = response.data;\n    } catch (error) {\n      console.error(error);\n    } //take note at the end of this line, this function is an async task. This means that its execution lives outside and its execution is not sequential to the original\n    //turned getInitialProps into an async function. through the try catch function, it runs the code and if theres an error anywhere, throw a console log of the error.\n    // I am throwing userData to the component as a props\n\n\n    return {\n      posts: posts.splice(0, 10)\n    };\n  }\n\n  renderPosts(posts) {\n    return posts.map((post, index) => {\n      return __jsx(\"li\", {\n        key: index\n      }, __jsx(Link, {\n        route: `/portfolio/${post.id}`\n      }, __jsx(\"a\", {\n        style: {\n          'fontSize': '20px'\n        }\n      }, \" \", post.title, \" \")));\n    });\n  }\n\n  render() {\n    const {\n      posts\n    } = this.props;\n    return __jsx(\"div\", null, __jsx(BaseLayout, null, __jsx(\"h1\", null, \"I am portfolios page\"), __jsx(\"ul\", null, this.renderPosts(posts))));\n  }\n\n}\nexport default Portfolios;","map":null,"metadata":{},"sourceType":"module"}