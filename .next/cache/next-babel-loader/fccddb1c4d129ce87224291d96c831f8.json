{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\Projects\\\\portfolio\\\\pages\\\\portfolios.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Header from '../components/common/Header/Header';\nimport BaseLayout from '../components/layouts/BaseLayout';\nimport axios from 'axios';\nimport Link from 'next/link';\nexport class Portfolios extends Component {\n  static async getInitialProps() {\n    // this console log will only show up in the SERVER side not the client. The only way for this to show up on the client is when you access this component again.\n    console.log('get initial props');\n    let posts = {};\n\n    try {\n      const response = await axios.get('https://jsonplaceholder.typicode.com/posts');\n      posts = response.data;\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n    } //take note at the end of this line, this function is an async task. This means that its execution lives outside and its execution is not sequential to the original\n    //turned getInitialProps into an async function. through the try catch function, it runs the code and if theres an error anywhere, throw a console log of the error.\n    // I am throwing userData to the component as a props\n\n\n    return {\n      posts: posts.splice(0, 10)\n    };\n  }\n\n  renderPosts(posts) {\n    return posts.map(post => {\n      return __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, __jsx(Link, {\n        as: `/portfolio/${post.id}`,\n        href: `/portfolio?title=${post.title}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        style: {\n          'fontSize': '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \" \", post.title, \" \")));\n    });\n  }\n\n  render() {\n    const {\n      posts\n    } = this.props;\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(BaseLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"I am portfolios page\"), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.renderPosts(posts))));\n  }\n\n}\nexport default Portfolios;","map":{"version":3,"sources":["E:/Documents/Projects/portfolio/pages/portfolios.js"],"names":["React","Component","Header","BaseLayout","axios","Link","Portfolios","getInitialProps","console","log","posts","response","get","data","error","splice","renderPosts","map","post","id","title","render","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAEtC,eAAaM,eAAb,GAA+B;AAC3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEA,QAAIC,KAAK,GAAE,EAAX;;AACA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,4CAAV,CAAvB;AACAF,MAAAA,KAAK,GAAGC,QAAQ,CAACE,IAAjB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACE,IAArB;AACD,KAJH,CAII,OAAOC,KAAP,EAAc;AACdN,MAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACD,KAXwB,CAY3B;AACA;AACA;;;AACA,WAAO;AAACJ,MAAAA,KAAK,EAAEA,KAAK,CAACK,MAAN,CAAa,CAAb,EAAe,EAAf;AAAR,KAAP;AACH;;AAEDC,EAAAA,WAAW,CAACN,KAAD,EAAQ;AAEf,WAAOA,KAAK,CAACO,GAAN,CAAYC,IAAD,IAAU;AACxB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQI,MAAC,IAAD;AAAM,QAAA,EAAE,EAAG,cAAaA,IAAI,CAACC,EAAG,EAAhC;AAAmC,QAAA,IAAI,EAAG,oBAAmBD,IAAI,CAACE,KAAM,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,KAAK,EAAE;AAAC,sBAAY;AAAb,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAkCF,IAAI,CAACE,KAAvC,MADJ,CARJ,CADJ;AAcH,KAfM,CAAP;AAgBH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACX,MAAAA;AAAD,QAAU,KAAKY,KAArB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKN,WAAL,CAAiBN,KAAjB,CADJ,CAFJ,CADJ,CADJ;AAUH;;AArDqC;AAwD1C,eAAeJ,UAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Header from '../components/common/Header/Header'\r\nimport BaseLayout from '../components/layouts/BaseLayout'\r\nimport axios from 'axios'\r\nimport Link from 'next/link'\r\nexport class Portfolios extends Component {\r\n\r\n    static async getInitialProps() {\r\n        // this console log will only show up in the SERVER side not the client. The only way for this to show up on the client is when you access this component again.\r\n        console.log('get initial props')\r\n         \r\n        let posts ={}\r\n        try {\r\n            const response = await axios.get('https://jsonplaceholder.typicode.com/posts')\r\n            posts = response.data\r\n            console.log(response.data);\r\n          } catch (error) {\r\n            console.error(error)\r\n          }\r\n        //take note at the end of this line, this function is an async task. This means that its execution lives outside and its execution is not sequential to the original\r\n        //turned getInitialProps into an async function. through the try catch function, it runs the code and if theres an error anywhere, throw a console log of the error.\r\n        // I am throwing userData to the component as a props\r\n        return {posts: posts.splice(0,10)}\r\n    }\r\n\r\n    renderPosts(posts) {\r\n       \r\n        return posts.map( (post) => {\r\n            return (\r\n                <li>\r\n                {/* \r\n                    inside the link, we used string interpolation in order to generate an href with the base\r\n                    \"/portfolio\" + title=post.title that means that whatever the resulting line becomes, it will convert to string\r\n\r\n                    the \"as={}\" prop for the link changes the href/url into whatever the value inside it is.\r\n                    in this case, it turns the URL to display the post id instead of the title itself.\r\n                 */}\r\n                    <Link as={`/portfolio/${post.id}`} href={`/portfolio?title=${post.title}`}>\r\n                        <a style={{'fontSize': '20px'}}> {post.title} </a>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        const {posts} = this.props\r\n        return (\r\n            <div> \r\n                <BaseLayout>\r\n                    <h1>I am portfolios page</h1>\r\n                    <ul>\r\n                       {this.renderPosts(posts)}\r\n                    </ul>\r\n                </BaseLayout>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Portfolios\r\n"]},"metadata":{},"sourceType":"module"}