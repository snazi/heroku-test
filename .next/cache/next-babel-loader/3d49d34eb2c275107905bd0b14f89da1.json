{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Label, Input, FormGroup } from 'reactstrap';\nimport './style.scss';\n\nvar PortInput = function PortInput(_ref) {\n  var label = _ref.label,\n      type = _ref.type,\n      field = _ref.field,\n      _ref$form = _ref.form,\n      touched = _ref$form.touched,\n      errors = _ref$form.errors,\n      props = _objectWithoutProperties(_ref, [\"label\", \"type\", \"field\", \"form\"]);\n\n  return __jsx(FormGroup, null, __jsx(Label, null, label), __jsx(Input, _extends({\n    type: type\n  }, field, props)), touched[field.name] && errors[field.name] && __jsx(\"div\", {\n    className: \"error\"\n  }, errors[field.name]));\n};\n\nexport default PortInput;","map":{"version":3,"sources":["E:/Documents/Projects/heroku potfolio test/heroku-test/components/form/PortInput.js"],"names":["Button","Label","Input","FormGroup","PortInput","label","type","field","form","touched","errors","props","name"],"mappings":";;;;AAAA,SAAQA,MAAR,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,SAA9B,QAA8C,YAA9C;AACA,OAAO,cAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MACdC,KADc,QACdA,KADc;AAAA,MAEdC,IAFc,QAEdA,IAFc;AAAA,MAGdC,KAHc,QAGdA,KAHc;AAAA,uBAIdC,IAJc;AAAA,MAINC,OAJM,aAINA,OAJM;AAAA,MAIGC,MAJH,aAIGA,MAJH;AAAA,MAKXC,KALW;;AAAA,SAOd,MAAC,SAAD,QACI,MAAC,KAAD,QAAQN,KAAR,CADJ,EAEE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEC;AAAb,KAAuBC,KAAvB,EAAkCI,KAAlC,EAFF,EAGGF,OAAO,CAACF,KAAK,CAACK,IAAP,CAAP,IACCF,MAAM,CAACH,KAAK,CAACK,IAAP,CADP,IACuB;AAAK,IAAA,SAAS,EAAC;AAAf,KAAwBF,MAAM,CAACH,KAAK,CAACK,IAAP,CAA9B,CAJ1B,CAPc;AAAA,CAAlB;;AAeE,eAAeR,SAAf","sourcesContent":["import {Button, Label, Input, FormGroup} from 'reactstrap'\r\nimport './style.scss'\r\n\r\nconst PortInput = ({\r\n    label,\r\n    type,\r\n    field, // { name, value, onChange, onBlur }\r\n    form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n    ...props\r\n  }) => (\r\n    <FormGroup>\r\n        <Label>{label}</Label>\r\n      <Input type={type} {...field} {...props} />\r\n      {touched[field.name] &&\r\n        errors[field.name] && <div className=\"error\">{errors[field.name]}</div>}\r\n    </FormGroup>\r\n  );\r\n\r\n  export default PortInput"]},"metadata":{},"sourceType":"module"}