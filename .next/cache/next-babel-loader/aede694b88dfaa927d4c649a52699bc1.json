{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment';\nimport \"react-datepicker/dist/react-datepicker.css\"; // CSS Modules, react-datepicker-cssmodules.css\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nimport { FormGroup, Label, Button, Form } from 'reactstrap';\n\nclass PortDate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", date => {\n      const {\n        setFieldValue,\n        setFieldTouched\n      } = this.props.form;\n      const {\n        name\n      } = this.props.field;\n      this.setState({\n        dateValue: date\n      });\n      setFieldValue(name, date, true);\n      setFieldTouched(name, true, true);\n    });\n\n    const dateValue = props.initialDate ? new Date(props.initialDate) : new Date();\n    const isHidden = props.initialDate ? false : true;\n    this.state = {\n      dateValue,\n      isHidden\n    };\n  }\n\n  toggleDate(date) {\n    const {\n      setFieldValue,\n      setFieldTouched\n    } = this.props.form;\n    const {\n      name\n    } = this.props.field;\n    this.setState({\n      isHidden: !this.state.isHidden\n    });\n    setFieldValue(name, date, true);\n    setFieldTouched(name, true, true);\n  }\n\n  render() {\n    const {\n      isHidden,\n      dateValue\n    } = this.state;\n    const {\n      label,\n      field,\n      canBeDisabled,\n      form: {\n        touched,\n        errors\n      }\n    } = this.props;\n    return __jsx(FormGroup, null, __jsx(Label, null, label), __jsx(\"div\", {\n      className: \"input-group\"\n    }, !isHidden && __jsx(DatePicker, {\n      selected: dateValue,\n      onChange: this.handleChange,\n      peekNextMonth: true,\n      showMonthDropdown: true,\n      showYearDropdown: true,\n      maxDate: new Date(),\n      dropdownMode: \"select\"\n    })), canBeDisabled && !isHidden && __jsx(Button, {\n      onClick: () => this.toggleDate()\n    }, \"Still Working here\"), canBeDisabled && isHidden && __jsx(React.Fragment, null, __jsx(\"span\", null, \"Still Working Here...\"), __jsx(Button, {\n      onClick: () => this.toggleDate(dateValue)\n    }, \" Set End Date\")), touched[field.name] && errors[field.name] && __jsx(\"div\", {\n      className: \"error\"\n    }, errors[field.name]));\n  }\n\n}\n\nexport default PortDate;","map":null,"metadata":{},"sourceType":"module"}