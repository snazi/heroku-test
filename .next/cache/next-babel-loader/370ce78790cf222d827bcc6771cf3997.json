{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport auth0 from 'auth0-js';\nimport Cookies from 'js-cookie';\n\nvar Auth0 =\n/*#__PURE__*/\nfunction () {\n  function Auth0() {\n    _classCallCheck(this, Auth0);\n\n    this.auth0 = new auth0.WebAuth({\n      // both domain and client ID come from auth0 application settings on the dashboard\n      domain: 'dev-qo3dzhrn.auth0.com',\n      clientID: 'Tx1EtxPBuv2OriCqZikmha1p0hEFabHZ',\n      // redirectUri will replace the URL once you successfully log in\n      redirectUri: 'http://localhost:3000/callback',\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    }); // these 2 function call forces or binds the functions stated below to auth0.js' context. meaning function calls will only be handled in this file.\n\n    this.login = this.login.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.logout = this.logout.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n\n  _createClass(Auth0, [{\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      var _this = this;\n\n      return new _Promise(function (resolve, reject) {\n        _this.auth0.parseHash(function (err, authResult) {\n          console.log(authResult);\n\n          if (authResult && authResult.accessToken && authResult.idToken) {\n            _this.setSession(authResult);\n\n            resolve();\n          } else if (err) {\n            reject(err);\n            console.log(err);\n          }\n        });\n      });\n    } // this function handles in \"cookies\" or the things we need to store in order to for the app to remember that we're logged in.\n\n  }, {\n    key: \"setSession\",\n    value: function setSession(authResult) {\n      // these 4 lines is im calling a function from JSON to give me a set time, and im storing strings into local storage given a name.\n      var expiresAt = _JSON$stringify((authResult.expiresIn = 1000) + new Date().getTime());\n\n      Cookies.set('user', authResult.idTokenPayload);\n      Cookies.set('jwt', authResult.idToken);\n      Cookies.set('expiresAt', expiresAt);\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      Cookies.remove('user');\n      Cookies.remove('jwt');\n      Cookies.remove('expriresAt');\n      this.auth0.logout({\n        returnTo: '',\n        clientID: 'Tx1EtxPBuv2OriCqZikmha1p0hEFabHZ'\n      });\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      this.auth0.authorize();\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      var expiresAt = Cookies.getJSON('expiresAt');\n      return new Date().getTime() < expiresAt;\n    }\n  }]);\n\n  return Auth0;\n}();\n\nvar auth0Client = new Auth0();\nexport default auth0Client;","map":null,"metadata":{},"sourceType":"module"}