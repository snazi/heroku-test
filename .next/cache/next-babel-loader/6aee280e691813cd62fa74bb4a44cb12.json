{"ast":null,"code":"import auth0 from 'auth0-js';\nimport Cookies from 'js-cookie';\n\nclass Auth0 {\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      // both domain and client ID come from auth0 application settings on the dashboard\n      domain: 'dev-qo3dzhrn.auth0.com',\n      clientID: 'Tx1EtxPBuv2OriCqZikmha1p0hEFabHZ',\n      // redirectUri will replace the URL once you successfully log in\n      redirectUri: 'http://localhost:3000/callback',\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    }); // these 2 function call forces or binds the functions stated below to auth0.js' context. meaning function calls will only be handled in this file.\n\n    this.login = this.login.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.logout = this.logout.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n\n  handleAuthentication() {\n    return new Promise((resolve, reject) => {\n      this.auth0.parseHash((err, authResult) => {\n        console.log(authResult);\n\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          this.setSession(authResult);\n          resolve();\n        } else if (err) {\n          reject(err);\n          console.log(err);\n        }\n      });\n    });\n  } // this function handles in \"cookies\" or the things we need to store in order to for the app to remember that we're logged in.\n\n\n  setSession(authResult) {\n    // these 4 lines is im calling a function from JSON to give me a set time, and im storing strings into local storage given a name.\n    const expiresAt = JSON.stringify((authResult.expiresIn = 1000) + new Date().getTime());\n    Cookies.set('user', authResult.idTokenPayload);\n    Cookies.set('jwt', authResult.idToken);\n    Cookies.set('expiresAt', expiresAt);\n  }\n\n  logout() {\n    Cookies.remove('user');\n    Cookies.remove('jwt');\n    Cookies.remove('expriresAt');\n    this.auth0.logout({\n      returnTo: '',\n      clientID: 'Tx1EtxPBuv2OriCqZikmha1p0hEFabHZ'\n    });\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  isAuthenticated() {\n    const expiresAt = Cookies.getJSON('expiresAt');\n    return new Date().getTime() < expiresAt;\n  }\n\n}\n\nconst auth0Client = new Auth0();\nexport default auth0Client;","map":null,"metadata":{},"sourceType":"module"}