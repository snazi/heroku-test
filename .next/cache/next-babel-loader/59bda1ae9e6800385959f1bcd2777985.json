{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Header from '../components/common/Header/Header';\nimport BaseLayout from '../components/layouts/BaseLayout';\nimport BasePage from '../components/common/BasePage/BasePage';\nimport withAuth from '../components/hoc/withAuth';\nimport SlateEditor from '../components/slate-editor/Editor';\nimport DynamicEditor from '../components/slate-editor/DynamicEditor';\nimport RichText from '../components/slate-editor/RichText';\nimport { updateBlog, getBlogById } from '../actions';\nimport { toast } from 'react-toastify';\nexport class BlogEditorUpdate extends Component {\n  static async getInitialProps({\n    query\n  }) {\n    const blogId = query.id;\n    let blog = {};\n\n    try {\n      blog = await getBlogById(blogId);\n    } catch (err) {\n      console.error(err);\n    }\n\n    return {\n      blog\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSaving: false\n    };\n    this.updateBlog = this.updateBlog.bind(this);\n  }\n\n  updateBlog(heading, story) {\n    const {\n      blog\n    } = this.props;\n    const updatedBlog = {};\n    updatedBlog.title = heading.title;\n    updatedBlog.subTitle = heading.subtitle;\n    updatedBlog.story = story;\n    this.setState({\n      isSaving: true\n    });\n    updateBlog(updatedBlog, blog._id).then(updatedBlog => {\n      toast.success('Blog Saved Successfully');\n      this.setState({\n        isSaving: false\n      });\n    }).catch(err => {\n      this.setState({\n        isSaving: false\n      });\n      const message = err.message || 'Server Error!';\n      toast.error(message);\n      console.error(message);\n    });\n  }\n\n  render() {\n    const {\n      blog\n    } = this.props;\n    console.log(blog);\n    const {\n      isSaving\n    } = this.state;\n    return __jsx(\"div\", null, __jsx(BaseLayout, this.props.auth, __jsx(BasePage, {\n      containerClass: \"editor-wrapper\",\n      className: \"blog-editor-page\"\n    }, __jsx(RichText, {\n      initialValue: blog.story,\n      save: this.updateBlog,\n      isSaving: isSaving\n    }))));\n  }\n\n}\nexport default withAuth('siteOwner')(BlogEditorUpdate);","map":null,"metadata":{},"sourceType":"module"}