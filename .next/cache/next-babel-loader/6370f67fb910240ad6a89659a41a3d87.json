{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport BaseLayout from '../components/layouts/BaseLayout';\nimport { withRouter } from 'next/router';\nimport axios from 'axios';\nexport var portfolio =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(portfolio, _Component);\n\n  function portfolio() {\n    _classCallCheck(this, portfolio);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(portfolio).apply(this, arguments));\n  }\n\n  _createClass(portfolio, [{\n    key: \"render\",\n    value: function render() {\n      var portfolio = this.props.portfolio;\n      return __jsx(\"div\", null, __jsx(BaseLayout, null, __jsx(\"h1\", null, portfolio.title), __jsx(\"p\", null, \" \", portfolio.body, \" \"), __jsx(\"p\", null, \" \", portfolio.id, \" \")));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    // due to changes in latest Next.js code, old code does not account that querry gets lost.\n    // usiong getInitial props allows us to let this component know that we have a query.\n    value: function getInitialProps(_ref) {\n      var query = _ref.query;\n      console.log(query);\n      return {\n        query: query\n      };\n    } // one of the differences between getInitialProps and the one below is that \n\n  }, {\n    key: \"getStaticProps\",\n    value: function getStaticProps(_ref2) {\n      var query, portfolioId, portfolio, response;\n      return _regeneratorRuntime.async(function getStaticProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = _ref2.query;\n              console.log(query);\n              portfolioId = query.id;\n              portfolio = {};\n              _context.prev = 4;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(axios.get('hstttps://jsonplaceholder.typicode.com/pos/' + portfolioId));\n\n            case 7:\n              response = _context.sent;\n              portfolio = resonse.data;\n              _context.next = 13;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](4);\n\n            case 13:\n              return _context.abrupt(\"return\", {\n                portfolio: portfolio\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[4, 11]]);\n    }\n  }]);\n\n  return portfolio;\n}(Component); // in the docs you will find that the page needs to be surrounded with the withRouter() however we can also do this syntax in order to export the whole component wrapped inside withRouter()\n\nexport default withRouter(portfolio);","map":{"version":3,"sources":["E:/Documents/Projects/portfolio/pages/portfolio.js"],"names":["React","Component","BaseLayout","withRouter","axios","portfolio","props","title","body","id","query","console","log","portfolioId","get","response","resonse","data"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,WAAaC,SAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BA2Ba;AAAA,UACGA,SADH,GACiB,KAAKC,KADtB,CACGD,SADH;AAGL,aACI,mBACI,MAAC,UAAD,QACI,kBAAKA,SAAS,CAACE,KAAf,CADJ,EAEI,sBAAKF,SAAS,CAACG,IAAf,MAFJ,EAGI,sBAAKH,SAAS,CAACI,EAAf,MAHJ,CADJ,CADJ;AAUH;AAxCL;AAAA;AACI;AACA;AAFJ,0CAGoC;AAAA,UAARC,KAAQ,QAARA,KAAQ;AAE5BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO;AAACA,QAAAA,KAAK,EAALA;AAAD,OAAP;AACD,KAPP,CAQI;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASiCA,cAAAA,KATjC,SASiCA,KATjC;AAUQC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEMG,cAAAA,WAZd,GAY4BH,KAAK,CAACD,EAZlC;AAcYJ,cAAAA,SAdZ,GAcwB,EAdxB;AAAA;AAAA;AAAA,+CAiBmCD,KAAK,CAACU,GAAN,CAAU,gDAAgDD,WAA1D,CAjBnC;;AAAA;AAiBkBE,cAAAA,QAjBlB;AAkBYV,cAAAA,SAAS,GAAGW,OAAO,CAACC,IAApB;AAlBZ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAwBe;AAACZ,gBAAAA,SAAS,EAATA;AAAD,eAxBf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,EAA+BJ,SAA/B,E,CA2CA;;AACA,eAAeE,UAAU,CAACE,SAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\r\nimport BaseLayout from '../components/layouts/BaseLayout'\r\nimport {withRouter} from 'next/router'\r\nimport axios from 'axios'\r\n\r\nexport class portfolio extends Component {\r\n    // due to changes in latest Next.js code, old code does not account that querry gets lost.\r\n    // usiong getInitial props allows us to let this component know that we have a query.\r\n    static getInitialProps({query}) {\r\n\r\n        console.log(query)\r\n        return {query}\r\n      }\r\n    // one of the differences between getInitialProps and the one below is that \r\n    static async getStaticProps({query}) {\r\n        console.log(query)\r\n\r\n        const portfolioId = query.id\r\n        \r\n        let portfolio = {}\r\n\r\n        try{\r\n            const response = await axios.get('hstttps://jsonplaceholder.typicode.com/pos/' + portfolioId)\r\n            portfolio = resonse.data\r\n        }catch(error) {\r\n\r\n        }\r\n\r\n\r\n        return {portfolio}\r\n    }\r\n\r\n    render() {\r\n        const { portfolio } = this.props\r\n\r\n        return (\r\n            <div>\r\n                <BaseLayout>\r\n                    <h1>{portfolio.title}</h1>\r\n                    <p> {portfolio.body} </p>\r\n                    <p> {portfolio.id} </p>\r\n                   \r\n                </BaseLayout>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// in the docs you will find that the page needs to be surrounded with the withRouter() however we can also do this syntax in order to export the whole component wrapped inside withRouter()\r\nexport default withRouter(portfolio)\r\n"]},"metadata":{},"sourceType":"module"}