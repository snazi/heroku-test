{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport Header from '../components/common/Header/Header';\nimport BaseLayout from '../components/layouts/BaseLayout';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Button } from 'reactstrap';\nimport Typed from 'react-typed';\nexport class Index extends Component {\n  // constructor will be called first\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFlipping: false\n    }; // array to be displayed in the typed animation\n\n    this.roles = ['Developer', 'Project Manager', 'Tech Enthusiast', 'Team Player', 'React JS', 'React Native'];\n  }\n\n  componentDidMount() {\n    this.animateCard();\n  }\n\n  componentWillUnmount() {\n    this.cardAnimationInterval && clearInterval(this.cardAnimationInterval);\n  }\n\n  animateCard() {\n    this.cardAnimationInterval = setInterval(() => {\n      this.setState({\n        isFlipping: !this.state.isFlipping\n      });\n    }, 30000);\n  } // then 2nd to be called is render()\n\n\n  render() {\n    // passed this in _app.js. Destructurize it\n    const {\n      isAuthenticated,\n      user\n    } = this.props.auth;\n    const {\n      isFlipping\n    } = this.state;\n    return __jsx(BaseLayout, _extends({\n      className: `cover ${isFlipping ? 'cover-1' : 'cover-0'}`\n    }, this.props.auth, {\n      headerType: \"index\",\n      title: \"Angelo Amadora - Portfolio\"\n    }), __jsx(\"div\", {\n      className: \"main-section\"\n    }));\n  }\n\n}\nexport default Index;","map":{"version":3,"sources":["E:/Documents/Code Projects/Portfolio/heroku-test/pages/index.jsx"],"names":["React","Component","Header","BaseLayout","Container","Row","Col","Button","Typed","Index","constructor","props","state","isFlipping","roles","componentDidMount","animateCard","componentWillUnmount","cardAnimationInterval","clearInterval","setInterval","setState","render","isAuthenticated","user","auth"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,OAAO,sCAAP;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA4C,YAA5C;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,MAAMC,KAAN,SAAoBR,SAApB,CAA8B;AAEjC;AACAS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb,CAFe,CAMf;;AACA,SAAKC,KAAL,GAAa,CAAC,WAAD,EAAa,iBAAb,EAAgC,iBAAhC,EAAmD,aAAnD,EAAkE,UAAlE,EAA8E,cAA9E,CAAb;AAEH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,WAAL;AACH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnB,SAAKC,qBAAL,IAA8BC,aAAa,CAAC,KAAKD,qBAAN,CAA3C;AACH;;AAEDF,EAAAA,WAAW,GAAG;AACV,SAAKE,qBAAL,GAA6BE,WAAW,CAAC,MAAM;AAC3C,WAAKC,QAAL,CAAc;AACVR,QAAAA,UAAU,EAAG,CAAC,KAAKD,KAAL,CAAWC;AADf,OAAd;AAGH,KAJuC,EAIrC,KAJqC,CAAxC;AAKH,GA5BgC,CA8BjC;;;AACAS,EAAAA,MAAM,GAAG;AACL;AACD,UAAM;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,QAA4B,KAAKb,KAAL,CAAWc,IAA7C;AACA,UAAM;AAAEZ,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AACC,WACI,MAAC,UAAD;AAAY,MAAA,SAAS,EAAG,SAAQC,UAAU,GAAG,SAAH,GAAe,SAAU;AAAnE,OAA0E,KAAKF,KAAL,CAAWc,IAArF;AAA2F,MAAA,UAAU,EAAC,OAAtG;AACY,MAAA,KAAK,EAAC;AADlB,QAEI;AAAK,MAAA,SAAS,EAAC;AAAf,MAFJ,CADJ;AAUH;;AA7CgC;AAgDrC,eAAehB,KAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Header from '../components/common/Header/Header'\r\nimport BaseLayout from '../components/layouts/BaseLayout'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\n\r\nimport Typed from 'react-typed';\r\n\r\nexport class Index extends Component {\r\n\r\n    // constructor will be called first\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isFlipping: false\r\n        }\r\n        \r\n        // array to be displayed in the typed animation\r\n        this.roles = ['Developer','Project Manager', 'Tech Enthusiast', 'Team Player', 'React JS', 'React Native']\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.animateCard()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.cardAnimationInterval && clearInterval(this.cardAnimationInterval)\r\n    }\r\n\r\n    animateCard() {\r\n        this.cardAnimationInterval = setInterval(() => {\r\n            this.setState({\r\n                isFlipping : !this.state.isFlipping\r\n            })\r\n        }, 30000)\r\n    }\r\n\r\n    // then 2nd to be called is render()\r\n    render() {\r\n        // passed this in _app.js. Destructurize it\r\n       const { isAuthenticated, user } = this.props.auth\r\n       const { isFlipping } = this.state\r\n        return (\r\n            <BaseLayout className={`cover ${isFlipping ? 'cover-1' : 'cover-0'}`} {...this.props.auth} headerType=\"index\"\r\n                        title=\"Angelo Amadora - Portfolio\">\r\n                <div className=\"main-section\">\r\n\r\n                    \r\n                </div>\r\n            </BaseLayout>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}