{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport Header from '../components/common/Header/Header';\nimport BaseLayout from '../components/layouts/BaseLayout';\nimport axios from 'axios'; // this link comes from routes.js\n\nimport { Link } from '../routes';\nimport BasePage from '../components/common/BasePage/BasePage'; // reacttrap imports for the card\n\nimport { Col, Row, Button } from 'reactstrap';\nimport PortfolioCard from '../components/portfolios/PortfolioCard';\nimport { getPortfolios, deletePortfolio } from '../actions';\nimport { Router } from '../routes';\nexport class Portfolios extends Component {\n  static async getInitialProps() {\n    let portfolios = [];\n\n    try {\n      portfolios = await getPortfolios();\n    } catch (err) {\n      console.log(err);\n    }\n\n    return {\n      portfolios\n    };\n  }\n\n  navigateToEdit(portfolioId, e) {\n    e.stopPropagation();\n    Router.pushRoute(`/portfolios/${portfolioId}/edit`);\n  }\n\n  displayDeleteWarning(portfolioId, e) {\n    e.stopPropagation();\n    const isConfirmed = confirm('Are you sure you want to delete?');\n\n    if (isConfirmed) {\n      this.deletePortfolio(portfolioId);\n    }\n  }\n\n  deletePortfolio(portfolioId) {\n    deletePortfolio(portfolioId).then(() => {\n      Router.pushRoute('/portfolios');\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  renderPortfolios(portfolios) {\n    const {\n      isAuthenticated,\n      isSiteOwner\n    } = this.props.auth;\n    return portfolios.map((portfolio, index) => {\n      return __jsx(Col, {\n        key: index,\n        md: \"4\"\n      }, __jsx(PortfolioCard, {\n        portfolio: portfolio\n      }, isAuthenticated && isSiteOwner && __jsx(React.Fragment, null, __jsx(Button, {\n        onClick: e => {\n          e.stopPropagation();\n          this.navigateToEdit(portfolio._id, e);\n        },\n        color: \"warning\"\n      }, \"Edit\"), ' ', __jsx(Button, {\n        onClick: e => {\n          e.stopPropagation();\n          this.displayDeleteWarning(portfolio._id, e);\n        },\n        color: \"danger\"\n      }, \"Delete\"))));\n    });\n  }\n\n  render() {\n    const {\n      portfolios\n    } = this.props;\n    const {\n      isAuthenticated,\n      isSiteOwner\n    } = this.props.auth;\n    return __jsx(\"div\", null, __jsx(BaseLayout, _extends({\n      title: \"Angelo Amadora - Learn about my Career\"\n    }, this.props.auth), __jsx(BasePage, {\n      className: \"portfolio-page\",\n      title: \"Portfolios\"\n    }, isAuthenticated && isSiteOwner && __jsx(Button, {\n      onClick: () => Router.pushRoute('/portfolios/new'),\n      color: \"success\",\n      className: \"create-port-btn\"\n    }, \"Create Portfolio\"), __jsx(Row, null, this.renderPortfolios(portfolios)))));\n  }\n\n}\nexport default Portfolios;","map":{"version":3,"sources":["E:/Documents/Projects/heroku potfolio test/heroku-test/pages/portfolios.js"],"names":["React","Component","Header","BaseLayout","axios","Link","BasePage","Col","Row","Button","PortfolioCard","getPortfolios","deletePortfolio","Router","Portfolios","getInitialProps","portfolios","err","console","log","navigateToEdit","portfolioId","e","stopPropagation","pushRoute","displayDeleteWarning","isConfirmed","confirm","then","catch","error","renderPortfolios","isAuthenticated","isSiteOwner","props","auth","map","portfolio","index","_id","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Header from '../components/common/Header/Header'\r\nimport BaseLayout from '../components/layouts/BaseLayout'\r\nimport axios from 'axios' \r\n// this link comes from routes.js\r\nimport {Link} from '../routes'\r\nimport BasePage from '../components/common/BasePage/BasePage'\r\n// reacttrap imports for the card\r\nimport { Col, Row, Button} from 'reactstrap'\r\nimport PortfolioCard from '../components/portfolios/PortfolioCard'\r\nimport {getPortfolios, deletePortfolio} from '../actions'\r\n\r\nimport {Router} from '../routes'\r\n\r\nexport class Portfolios extends Component {\r\n\r\n    static async getInitialProps() {\r\n        let portfolios = []\r\n\r\n        try{\r\n            portfolios = await getPortfolios()\r\n        }catch(err) {\r\n            console.log(err)\r\n        }\r\n\r\n        return {portfolios}\r\n    }\r\n\r\n    navigateToEdit(portfolioId, e) {\r\n        e.stopPropagation()\r\n        Router.pushRoute(`/portfolios/${portfolioId}/edit`)\r\n    }\r\n\r\n    displayDeleteWarning(portfolioId, e) {\r\n        e.stopPropagation()\r\n\r\n        const isConfirmed = confirm('Are you sure you want to delete?')\r\n\r\n        if(isConfirmed) {\r\n            this.deletePortfolio(portfolioId)\r\n        }\r\n    }\r\n\r\n    deletePortfolio(portfolioId) {\r\n        deletePortfolio(portfolioId)\r\n            .then( () => {\r\n                Router.pushRoute('/portfolios')\r\n            })\r\n            .catch( err => {\r\n                console.error(err)\r\n            })\r\n    }\r\n\r\n    renderPortfolios(portfolios) {\r\n       const { isAuthenticated, isSiteOwner } = this.props.auth\r\n\r\n        return portfolios.map( (portfolio,index) => {\r\n            return (\r\n                <Col key={index} md=\"4\">\r\n                    <PortfolioCard portfolio={portfolio}>\r\n                    {isAuthenticated && isSiteOwner &&\r\n                                <React.Fragment>\r\n                                    <Button onClick={(e) => {\r\n                                            e.stopPropagation()\r\n                                            this.navigateToEdit(portfolio._id, e)}\r\n                                        } \r\n                                        color=\"warning\">\r\n                                        Edit\r\n                                    </Button>{' '}\r\n                                    <Button onClick={ (e) => {\r\n                                            e.stopPropagation()\r\n                                            this.displayDeleteWarning(portfolio._id, e)\r\n                                        }} \r\n                                        color=\"danger\">\r\n                                        Delete\r\n                                    </Button>\r\n                                </React.Fragment>\r\n                            }\r\n                    </PortfolioCard>\r\n                </Col>\r\n\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        const {portfolios} = this.props\r\n        const { isAuthenticated, isSiteOwner } = this.props.auth\r\n        return (\r\n            <div> \r\n                <BaseLayout title=\"Angelo Amadora - Learn about my Career\" {...this.props.auth}>\r\n                    <BasePage className=\"portfolio-page\" title=\"Portfolios\">\r\n                        {isAuthenticated && isSiteOwner &&\r\n                            <Button onClick={()=> Router.pushRoute('/portfolios/new')} \r\n                                color=\"success\" \r\n                                className=\"create-port-btn\">\r\n                                    Create Portfolio\r\n                            </Button>\r\n                        }\r\n                        <Row>\r\n                        {this.renderPortfolios(portfolios)}\r\n                        </Row>\r\n                    </BasePage>\r\n                </BaseLayout>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Portfolios\r\n"]},"metadata":{},"sourceType":"module"}