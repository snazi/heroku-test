{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport BaseLayout from '../layouts/BaseLayout';\nimport BasePage from '../common/BasePage/BasePage';\nconst namespace = 'http://localhost:3000/';\nexport default (role => {\n  return Component => {\n    return class withAuth extends React.Component {\n      static async getInitialProps(args) {\n        // this \"waits\" a check of the componentbeing passed down if it has getInitialProps and execute it\n        const pageProps = (await Component.getInitialProps) && (await Component.getInitialProps(args)); // destructurize the pageprops as a \"prop\" if we did not destructurize it we'd be passing a pageProps outside of a\n\n        return _objectSpread({}, pageProps);\n      }\n\n      renderProtectedPage() {\n        const {\n          isAuthenticated,\n          user\n        } = this.props.auth;\n        const userRole = user && user[`${namespace}role`];\n        let isAuthorized = false;\n\n        if (role) {\n          if (userRole && userRole === role) isAuthorized = true;\n        } else {\n          isAuthorized = true;\n        }\n\n        if (!isAuthenticated) {\n          return __jsx(\"div\", null, __jsx(BaseLayout, this.props.auth, __jsx(BasePage, null, __jsx(\"h1\", null, \"You're not isAuthenticated, please log in to access this page\"))));\n        } else if (!isAuthorized) {\n          return __jsx(\"div\", null, __jsx(BaseLayout, this.props.auth, __jsx(BasePage, null, __jsx(\"h1\", null, \"You're not Authroized, you dont have permission to access this page\"))));\n        } else {\n          return __jsx(Component, this.props);\n        }\n      }\n\n      render() {\n        return this.renderProtectedPage();\n      }\n\n    };\n  };\n});","map":{"version":3,"sources":["E:/Documents/Projects/portfolio/frontend/components/hoc/withAuth.js"],"names":["React","BaseLayout","BasePage","namespace","role","Component","withAuth","getInitialProps","args","pageProps","renderProtectedPage","isAuthenticated","user","props","auth","userRole","isAuthorized","render"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AAEA,MAAMC,SAAS,GAAG,wBAAlB;AAEA,gBAAgBC,IAAD,IAAU;AACrB,SAAQC,SAAD,IAAe;AAClB,WAAO,MAAMC,QAAN,SAAuBN,KAAK,CAACK,SAA7B,CAAuC;AAE1C,mBAAaE,eAAb,CAA6BC,IAA7B,EAAmC;AAC/B;AACA,cAAMC,SAAS,GAAG,OAAMJ,SAAS,CAACE,eAAhB,MAAmC,MAAMF,SAAS,CAACE,eAAV,CAA0BC,IAA1B,CAAzC,CAAlB,CAF+B,CAG/B;;AACA,iCAAYC,SAAZ;AACH;;AAEDC,MAAAA,mBAAmB,GAAG;AAElB,cAAM;AAAEC,UAAAA,eAAF;AAAmBC,UAAAA;AAAnB,YAA4B,KAAKC,KAAL,CAAWC,IAA7C;AACA,cAAMC,QAAQ,GAAGH,IAAI,IAAIA,IAAI,CAAG,GAAET,SAAU,MAAf,CAA7B;AAEA,YAAIa,YAAY,GAAG,KAAnB;;AAEA,YAAGZ,IAAH,EAAQ;AACJ,cAAIW,QAAQ,IAAIA,QAAQ,KAAKX,IAA7B,EACIY,YAAY,GAAG,IAAf;AACP,SAHD,MAGM;AACFA,UAAAA,YAAY,GAAG,IAAf;AACH;;AAED,YAAG,CAACL,eAAJ,EAAoB;AAChB,iBACI,mBACI,MAAC,UAAD,EAAgB,KAAKE,KAAL,CAAWC,IAA3B,EACI,MAAC,QAAD,QACI,kFADJ,CADJ,CADJ,CADJ;AASH,SAVD,MAUO,IAAG,CAACE,YAAJ,EAAkB;AACrB,iBACI,mBACI,MAAC,UAAD,EAAgB,KAAKH,KAAL,CAAWC,IAA3B,EACI,MAAC,QAAD,QACI,wFADJ,CADJ,CADJ,CADJ;AASH,SAVM,MAUA;AACH,iBAAS,MAAC,SAAD,EAAe,KAAKD,KAApB,CAAT;AACH;AAEJ;;AAEDI,MAAAA,MAAM,GAAG;AAEL,eAAO,KAAKP,mBAAL,EAAP;AACH;;AApDyC,KAA9C;AAsDH,GAvDD;AAwDH,CAzDD","sourcesContent":["import React from 'react'\r\nimport BaseLayout from '../layouts/BaseLayout'\r\nimport BasePage from '../common/BasePage/BasePage'\r\n\r\nconst namespace = 'http://localhost:3000/'\r\n\r\nexport default (role) => {\r\n    return (Component) => {\r\n        return class withAuth extends React.Component {\r\n        \r\n            static async getInitialProps(args) {\r\n                // this \"waits\" a check of the componentbeing passed down if it has getInitialProps and execute it\r\n                const pageProps = await Component.getInitialProps && await Component.getInitialProps(args)\r\n                // destructurize the pageprops as a \"prop\" if we did not destructurize it we'd be passing a pageProps outside of a\r\n                return { ...pageProps }\r\n            }\r\n    \r\n            renderProtectedPage() {\r\n                \r\n                const { isAuthenticated, user } = this.props.auth\r\n                const userRole = user && user [`${namespace}role`]\r\n    \r\n                let isAuthorized = false\r\n    \r\n                if(role){\r\n                    if( userRole && userRole === role ) \r\n                        isAuthorized = true\r\n                }else {\r\n                    isAuthorized = true\r\n                }\r\n    \r\n                if(!isAuthenticated){\r\n                    return(\r\n                        <div>\r\n                            <BaseLayout {...this.props.auth}>\r\n                                <BasePage>\r\n                                    <h1>You're not isAuthenticated, please log in to access this page</h1>\r\n                                </BasePage>\r\n                            </BaseLayout>\r\n                        </div>\r\n                        )\r\n                } else if(!isAuthorized) {\r\n                    return(\r\n                        <div>\r\n                            <BaseLayout {...this.props.auth}>\r\n                                <BasePage>\r\n                                    <h1>You're not Authroized, you dont have permission to access this page</h1>\r\n                                </BasePage>\r\n                            </BaseLayout>\r\n                        </div>\r\n                        )\r\n                } else {\r\n                    return ( <Component {...this.props}/> )\r\n                }\r\n    \r\n            }\r\n    \r\n            render() {\r\n               \r\n                return this.renderProtectedPage()\r\n            }\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}