{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App, { Container } from 'next/app';\nimport auth0 from '../services/auth0';\nimport Fonts from '../helpers/Fonts'; //styling\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../components/common/styles/main.scss';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // TODO: once finished with entire project, use the current implementation, this is depcrated.\n// const namespace = 'http://localhost:3000'\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Fonts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // pass it along\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          auth = _this$props.auth; // create an auth prop and pass this current instance of auth.\n\n      return __jsx(Container, null, __jsx(ToastContainer, null), __jsx(Component, _extends({}, pageProps, {\n        auth: auth\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var Component, router, ctx, pageProps, user, isAuthenticated, isSiteOwner, auth;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, router = _ref.router, ctx = _ref.ctx;\n              pageProps = {};\n\n              if (!true) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(auth0.clientAuth());\n\n            case 5:\n              _context.t0 = _context.sent;\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(auth0.serverAuth(ctx.req));\n\n            case 10:\n              _context.t0 = _context.sent;\n\n            case 11:\n              user = _context.t0;\n\n              if (!Component.getInitialProps) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 15:\n              pageProps = _context.sent;\n\n            case 16:\n              isAuthenticated = false;\n\n              if (user) {\n                isAuthenticated = true;\n              }\n\n              isSiteOwner = user && user[\"http://angeloamadora.herokuapp.com/role\"] === 'siteOwner'; // now that we've managed to give auth details to both client and server side, we should pass the auth data to our pages\n\n              auth = {\n                user: user,\n                isAuthenticated: !!user,\n                isSiteOwner: isSiteOwner\n              }; // return auth as well as page props\n\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps,\n                auth: auth\n              });\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":null,"metadata":{},"sourceType":"module"}