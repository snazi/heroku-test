{"ast":null,"code":"var __jsx = React.createElement;\n// Render Prop\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Button, Alert } from 'reactstrap';\nimport PortInput from '../form/PortInput';\nimport PortDate from '../form/PortDate';\nimport moment from 'moment';\n\nconst validateInputs = values => {\n  const errors = {};\n  const keyArray = Object.keys(values);\n  keyArray.forEach(key => {\n    if (!values[key]) {\n      if (key !== 'endDate') {\n        errors[key] = `Field ${key} is required!`;\n      }\n    }\n  });\n  const startDate = moment(values.startDate);\n  const endDate = moment(values.endDate);\n\n  if (startDate && endDate && moment(endDate).isBefore(startDate)) {\n    errors.endDate = 'End Date cannot be before start Date';\n  }\n\n  return errors;\n};\n\nconst PortfolioCreateFrom = ({\n  initialValues,\n  onSubmit,\n  error\n}) => __jsx(\"div\", null, __jsx(Formik, {\n  initialValues: initialValues,\n  validate: validateInputs,\n  onSubmit: onSubmit\n}, ({\n  isSubmitting\n}) => __jsx(Form, null, __jsx(Field, {\n  type: \"text\",\n  name: \"title\",\n  label: \"Title\",\n  component: PortInput\n}), __jsx(Field, {\n  type: \"text\",\n  name: \"company\",\n  label: \"Company\",\n  component: PortInput\n}), __jsx(Field, {\n  type: \"text\",\n  name: \"location\",\n  label: \"Location\",\n  component: PortInput\n}), __jsx(Field, {\n  type: \"text\",\n  name: \"position\",\n  label: \"Position\",\n  component: PortInput\n}), __jsx(Field, {\n  type: \"textarea\",\n  name: \"description\",\n  label: \"Description\",\n  component: PortInput\n}), __jsx(Field, {\n  name: \"startDate\",\n  initialDate: initialValues.startDate,\n  label: \"Start Date\",\n  component: PortDate\n}), __jsx(Field, {\n  name: \"endDate\",\n  initialDate: initialValues.endDate,\n  canBeDisabled: true,\n  label: \"End Date\",\n  component: PortDate\n}), error && __jsx(Alert, {\n  color: \"danger\"\n}, error), __jsx(Button, {\n  color: \"success\",\n  size: \"lg\",\n  type: \"submit\",\n  disabled: isSubmitting\n}, \"Create Entry\"))));\n\nexport default PortfolioCreateFrom; // import React from 'react'\n// class PortfolioCreateFrom extends React.Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             title: '',\n//             desc: '',\n//             language:''\n//         }\n//         this.handleChange = this.handleChange.bind(this)\n//         this.handleSubmit = this.handleSubmit.bind(this)\n//     }\n//     handleChange(e) {\n//         const field = e.target.name\n//         this.setState({\n//             [field]: e.target.value\n//         })\n//     }\n//     handleSubmit(e) {\n//         alert(`You submitted the following ${this.state.title} ${this.state.desc} ${this.state.language}`)\n//         e.preventDefault()\n//     }\n//     render() {\n//         return(\n//             <form onSubmit={this.handleSubmit}>\n//                 <Label>\n//                     Name:\n//                     <input name=\"title\" type=\"text\" value={this.state.title} onChange={this.handleChange} />\n//                 </Label>\n//                 <Label>\n//                     Description\n//                     <textarea name=\"desc\" type=\"text\" value={this.state.desc} onChange={this.handleChange} />\n//                 </Label>\n//                 <Label>\n//                     Pick your favorite programming language:\n//                     <select name=\"language\" value={this.state.language} onChange={this.handleChange}>\n//                         <option value=\"javascript\">Javascript</option>\n//                         <option value=\"java\">Java</option>\n//                         <option value=\"swift\">Swift</option>\n//                         <option value=\"sql\">MySQL</option>\n//                         <option value=\"c++\">C++</option>\n//                     </select>\n//                 </Label>\n//                 <input type=\"submit\" value=\"Submit\"/>\n//             </form>\n//         )\n//     }\n// }\n// export default PortfolioCreateFrom","map":{"version":3,"sources":["E:/Documents/Projects/heroku potfolio test/heroku-test/components/portfolios/PortfolioCreateFrom.js"],"names":["React","Formik","Form","Field","ErrorMessage","Button","Alert","PortInput","PortDate","moment","validateInputs","values","errors","keyArray","Object","keys","forEach","key","startDate","endDate","isBefore","PortfolioCreateFrom","initialValues","onSubmit","error","isSubmitting"],"mappings":"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","sourcesContent":["// Render Prop\r\nimport React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport { Button, Alert } from 'reactstrap'\r\n\r\nimport PortInput from '../form/PortInput'\r\nimport PortDate from '../form/PortDate'\r\nimport moment from 'moment'\r\n\r\nconst validateInputs = (values) => {\r\n\r\n        const errors = {};\r\n \r\n        const keyArray = Object.keys(values)\r\n\r\n        keyArray.forEach((key) => {\r\n          if(!values[key]) {\r\n            if(key !== 'endDate'){\r\n              errors[key] = `Field ${key} is required!`\r\n            }\r\n            \r\n          }\r\n        })\r\n\r\n        const  startDate = moment(values.startDate)\r\n        const endDate = moment(values.endDate)\r\n\r\n        if (startDate && endDate && moment(endDate).isBefore(startDate)) {\r\n          errors.endDate = 'End Date cannot be before start Date'\r\n        }\r\n\r\n        return errors;\r\n}\r\n\r\nconst PortfolioCreateFrom = ({initialValues, onSubmit, error}) => (\r\n\r\n  <div>\r\n    <Formik\r\n      initialValues={initialValues}\r\n\r\n      validate={validateInputs}\r\n\r\n      onSubmit={onSubmit}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form>\r\n            <Field type=\"text\" name=\"title\" label=\"Title\" component={PortInput}/>\r\n            \r\n            <Field type=\"text\" name=\"company\" label=\"Company\"component={PortInput}/>\r\n            \r\n            <Field type=\"text\" name=\"location\" label=\"Location\"component={PortInput}/>\r\n              \r\n            <Field type=\"text\" name=\"position\" label=\"Position\" component={PortInput}/>\r\n\r\n            <Field type=\"textarea\" name=\"description\" label=\"Description\" component={PortInput}/>\r\n           \r\n            <Field name=\"startDate\" initialDate={initialValues.startDate} label=\"Start Date\" component={PortDate}/>\r\n              \r\n            <Field name=\"endDate\"initialDate={initialValues.endDate}  canBeDisabled={true} label=\"End Date\" component={PortDate}/>\r\n\r\n            {\r\n              error &&\r\n              <Alert color=\"danger\">\r\n                {error}\r\n              </Alert>\r\n            }\r\n\r\n            <Button color=\"success\" size=\"lg\" type=\"submit\" disabled={isSubmitting}>\r\n                Create Entry\r\n            </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default PortfolioCreateFrom;\r\n\r\n\r\n\r\n// import React from 'react'\r\n\r\n// class PortfolioCreateFrom extends React.Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         this.state = {\r\n//             title: '',\r\n//             desc: '',\r\n//             language:''\r\n//         }\r\n\r\n//         this.handleChange = this.handleChange.bind(this)\r\n\r\n//         this.handleSubmit = this.handleSubmit.bind(this)\r\n\r\n//     }\r\n\r\n//     handleChange(e) {\r\n//         const field = e.target.name\r\n//         this.setState({\r\n//             [field]: e.target.value\r\n//         })\r\n//     }\r\n\r\n//     handleSubmit(e) {\r\n//         alert(`You submitted the following ${this.state.title} ${this.state.desc} ${this.state.language}`)\r\n//         e.preventDefault()\r\n//     }\r\n\r\n//     render() {\r\n//         return(\r\n//             <form onSubmit={this.handleSubmit}>\r\n//                 <Label>\r\n//                     Name:\r\n//                     <input name=\"title\" type=\"text\" value={this.state.title} onChange={this.handleChange} />\r\n//                 </Label>\r\n//                 <Label>\r\n//                     Description\r\n//                     <textarea name=\"desc\" type=\"text\" value={this.state.desc} onChange={this.handleChange} />\r\n//                 </Label>\r\n//                 <Label>\r\n//                     Pick your favorite programming language:\r\n//                     <select name=\"language\" value={this.state.language} onChange={this.handleChange}>\r\n//                         <option value=\"javascript\">Javascript</option>\r\n//                         <option value=\"java\">Java</option>\r\n//                         <option value=\"swift\">Swift</option>\r\n//                         <option value=\"sql\">MySQL</option>\r\n//                         <option value=\"c++\">C++</option>\r\n//                     </select>\r\n//                 </Label>\r\n//                 <input type=\"submit\" value=\"Submit\"/>\r\n//             </form>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default PortfolioCreateFrom"]},"metadata":{},"sourceType":"module"}